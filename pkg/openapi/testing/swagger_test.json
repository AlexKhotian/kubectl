{
    "swagger": "2.0",
    "info": {
        "title": "Kubernetes",
        "version": "v1.10.0"
    },
    "paths": {
        "/apis/authorization.k8s.io/v1/subjectaccessreviews": {
            "post": {
                "description": "create a SubjectAccessReview",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "authorization_v1"
                ],
                "operationId": "createAuthorizationV1SubjectAccessReview",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReview"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReview"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReview"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReview"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "x-kubernetes-action": "post",
                "x-kubernetes-group-version-kind": {
                    "group": "authorization.k8s.io",
                    "kind": "SubjectAccessReview",
                    "version": "v1"
                }
            },
            "parameters": [{
                "uniqueItems": true,
                "type": "string",
                "description": "If 'true', then the output is pretty printed.",
                "name": "pretty",
                "in": "query"
            }]
        },
        "/apis/apps/v1beta1/deployments": {
            "get": {
                "description": "list or watch objects of kind Deployment",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json",
                    "application/yaml",
                    "application/vnd.kubernetes.protobuf",
                    "application/json;stream=watch",
                    "application/vnd.kubernetes.protobuf;stream=watch"
                ],
                "schemes": [
                    "https"
                ],
                "tags": [
                    "apps_v1beta1"
                ],
                "operationId": "listAppsV1beta1DeploymentForAllNamespaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "x-kubernetes-action": "list",
                "x-kubernetes-group-version-kind": {
                    "group": "apps",
                    "kind": "Deployment",
                    "version": "v1beta1"
                }
            },
            "parameters": [{
                    "uniqueItems": true,
                    "type": "string",
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "name": "continue",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "name": "fieldSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "If true, partially initialized resources are included in the response.",
                    "name": "includeUninitialized",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "name": "labelSelector",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "name": "limit",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "If 'true', then the output is pretty printed.",
                    "name": "pretty",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "string",
                    "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
                    "name": "resourceVersion",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "integer",
                    "description": "Timeout for the list/watch call.",
                    "name": "timeoutSeconds",
                    "in": "query"
                },
                {
                    "uniqueItems": true,
                    "type": "boolean",
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "name": "watch",
                    "in": "query"
                }
            ]
        }
    },
    "definitions": {
        "io.k8s.api.authorization.v1.SubjectAccessReview": {
            "description": "SubjectAccessReview checks whether or not a user or group can perform an action.",
            "required": [
                "spec"
            ],
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                },
                "spec": {
                    "description": "Spec holds information about the request being evaluated",
                    "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewSpec"
                },
                "status": {
                    "description": "Status is filled in by the server and indicates whether the request is allowed or not"
                }
            },
            "x-kubernetes-group-version-kind": [{
                "group": "authorization.k8s.io",
                "kind": "SubjectAccessReview",
                "version": "v1"
            }]
        },
        "io.k8s.api.authorization.v1.SubjectAccessReviewSpec": {
            "description": "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
            "properties": {
                "extra": {
                    "description": "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "groups": {
                    "description": "Groups is the groups you're testing for.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nonResourceAttributes": {
                    "description": "NonResourceAttributes describes information for a non-resource access request"
                },
                "resourceAttributes": {
                    "description": "ResourceAuthorizationAttributes describes information for a resource access request"
                },
                "uid": {
                    "description": "UID information about the requesting user.",
                    "type": "string"
                },
                "user": {
                    "description": "User is the user you're testing for. If you specify \"User\" but not \"Groups\", then is it interpreted as \"What if User were not a member of any groups",
                    "type": "string"
                }
            }
        },
        "io.k8s.api.apps.v1beta1.Deployment": {
            "description": "DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets.",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "description": "Standard object metadata.",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                },
                "spec": {
                    "description": "Specification of the desired behavior of the Deployment.",
                    "$ref": "#/definitions/io.k8s.api.apps.v1beta1.DeploymentSpec"
                },
                "status": {
                    "description": "Most recently observed status of the Deployment."
                }
            },
            "x-kubernetes-group-version-kind": [{
                "group": "apps",
                "kind": "Deployment",
                "version": "v1beta1"
            }]
        },
        "io.k8s.api.apps.v1beta1.DeploymentSpec": {
            "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
            "required": [
                "template"
            ],
            "properties": {
                "minReadySeconds": {
                    "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
                    "type": "integer",
                    "format": "int32"
                },
                "paused": {
                    "description": "Indicates that the deployment is paused.",
                    "type": "boolean"
                },
                "progressDeadlineSeconds": {
                    "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
                    "type": "integer",
                    "format": "int32"
                },
                "replicas": {
                    "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
                    "type": "integer",
                    "format": "int32"
                },
                "revisionHistoryLimit": {
                    "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 2.",
                    "type": "integer",
                    "format": "int32"
                },
                "rollbackTo": {
                    "description": "DEPRECATED. The config this deployment is rolling back to. Will be cleared after rollback is done."
                },
                "selector": {
                    "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment."
                },
                "strategy": {
                    "description": "The deployment strategy to use to replace existing pods with new ones."
                },
                "template": {
                    "description": "Template describes the pods that will be created."
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                    "type": "integer",
                    "format": "int64"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-kubernetes-patch-strategy": "merge"
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                    "type": "integer",
                    "format": "int64"
                },
                "initializers": {
                    "description": "An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user."
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
                    },
                    "x-kubernetes-patch-merge-key": "uid",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
                    "type": "string"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
            "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
            "required": [
                "apiVersion",
                "kind",
                "name",
                "uid"
            ],
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                },
                "blockOwnerDeletion": {
                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                    "type": "boolean"
                },
                "controller": {
                    "description": "If true, this reference points to the managing controller.",
                    "type": "boolean"
                },
                "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerToken": {
            "description": "Bearer Token authentication",
            "type": "apiKey",
            "name": "authorization",
            "in": "header"
        }
    },
    "security": [{
        "BearerToken": []
    }]
}